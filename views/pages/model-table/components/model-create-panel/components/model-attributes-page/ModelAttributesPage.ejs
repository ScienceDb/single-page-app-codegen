import React, { useRef } from 'react';
import PropTypes from 'prop-types';
import <%- nameCp _%>AttributesFormView from './<%- nameLc _%>-attributes-form-view/<%- nameCp _%>AttributesFormView'
import { makeStyles } from '@material-ui/core/styles';
import Grid from '@material-ui/core/Grid';
import Fade from '@material-ui/core/Fade';

const useStyles = makeStyles(theme => ({
  root: {
    margin: theme.spacing(0),
  },
}));

export default function <%- nameCp _%>AttributesPage(props) {
  const classes = useStyles();
  const {
    valueOkStates,
<%if(belongsTosArr.length > 0){-%>
    foreignKeys,
<%}-%>
    hidden,
    handleSetValue,
  } = props;
  
  const fieldRefs = useRef([]);

  function itemHasKey(item, index) {
    if(item !== undefined) {
      return item.key === this.key;
    } else {
      return false;
    }
  }

  const handleFieldReady = (key, textFieldRef, inputRef) => {
    let o = {key: key, textFieldRef: textFieldRef, inputRef: inputRef};
    let i = -1;
    if(fieldRefs.current.length > 0) {
      i = fieldRefs.current.findIndex(itemHasKey, {key: key}); 
    }
    if(i !== -1) {
      fieldRefs.current[i] = o;
    } else {
      fieldRefs.current.push(o);
    }
  };

  return (
    <div hidden={hidden}>
      <Fade in={!hidden} timeout={500}>
        <Grid
          className={classes.root} 
          container justify='center' 
          alignItems='flex-start'
          spacing={0}
        > 
          {/* Attributes Form View */}
          <Grid item xs={12} sm={10} md={9} lg={8} xl={7}>
            <<%- nameCp _%>AttributesFormView
              valueOkStates={valueOkStates}
<%if(belongsTosArr.length > 0){-%>
              foreignKeys={foreignKeys}
<%}-%>
              handleFieldReady={handleFieldReady}
              handleSetValue={handleSetValue}
            />
          </Grid>
        </Grid>
      </Fade>
    </div>
  );
}
<%- nameCp _%>AttributesPage.propTypes = {
  valueOkStates: PropTypes.object.isRequired,
<%if(belongsTosArr.length > 0){-%>
    foreignKeys: PropTypes.object.isRequired,
<%}-%>
  hidden: PropTypes.bool.isRequired,
  handleSetValue: PropTypes.func.isRequired,
};