import React from 'react';
import { useTranslation } from 'react-i18next';
import PropTypes from 'prop-types';
import { makeStyles } from '@material-ui/core/styles';
import Grid from '@material-ui/core/Grid';
import Typography from '@material-ui/core/Typography';
import Card from '@material-ui/core/Card';
import CardContent from '@material-ui/core/CardContent';
import CardHeader from '@material-ui/core/CardHeader';
import Attributes from '@material-ui/icons/HdrWeakTwoTone';
<%let keys = Object.keys(typeAttributes);
  for( let i=0; i<keys.length; i++ ){
    let type = keys[i];
-%>
<%if(type === 'String') {%>
import StringField from './components/StringField'
<%}-%>
<%if(type === 'Float') {%>
import FloatField from './components/FloatField'
<%}-%>
<%if(type === 'Int') {%>
import IntField from './components/IntField'
<%}-%>
<%if(type === 'Boolean') {%>
import BoolField from './components/BoolField'
<%}-%>
<%if(type === 'Date') {%>
import DateField from './components/DateField'
<%}-%>
<%if(type === 'Time') {%>
import TimeField from './components/TimeField'
<%}-%>
<%if(type === 'DateTime') {%>
import DateTimeField from './components/DateTimeField'
<%}}-%>

const useStyles = makeStyles(theme => ({
  root: {
    margin: theme.spacing(0),
  },
  card: {
    margin: theme.spacing(0),
    maxHeight: '70vh',
    overflow: 'auto',
  },
  cardB: {
    margin: theme.spacing(0),
    padding: theme.spacing(0),
  },
  cardContent: {
    marginLeft: theme.spacing(5),
    marginRight: theme.spacing(5),
    minWidth: 200,
  },
}));

export default function <%- nameOnPascal _%>AttributesFormView(props) {
  const classes = useStyles();
  const { t } = useTranslation();
  const { item, 
          valueOkStates,
<%if(hasOwnForeingKeys){-%>
          foreignKeys,
<%}-%> 
          handleSetValue,
        } = props;

  function getItemsOk() {
    let countOk=0;
    let a = Object.entries(valueOkStates);
    for(let i=0; i<a.length; ++i) {
      if(a[i][1] === 1) {
        countOk++;
      }
    }
    return countOk;
  }

  return (
    <div className={classes.root}>
      <Grid container justify='center'>
        <Grid item xs={12}>

        <Card className={classes.cardB} elevation={0}>
            {/* Header */}
            <CardHeader
              avatar={
                <Attributes color="primary" fontSize="small" />
              }
              title={
                <Typography variant="h6">
                    { t('modelPanels.model') + ': <%- nameCp %>' }
                </Typography>
              }
              subheader={getItemsOk()+' / <%- attributesArr.length %> ' + t('modelPanels.completed')}
            >
            </CardHeader>
          </Card>

          <Card className={classes.card}>
            {/* 
              Fields 
            */}

<%if(internalId === 'id'){-%>
            {/* Id */}
            <CardContent key='id' className={classes.cardContent}>
              <Typography variant="h6" display="inline">Id:</Typography>
              <Typography variant="h6" display="inline" color="textSecondary">&nbsp;{item.id}</Typography>
            </CardContent>
<%}-%>            
<%for( let i=0; i<attributesArr.length; i++ ){
  let a = attributesArr[i][0];
  let label = a[0].toUpperCase() + a.slice(1);
  let type = attributesArr[i][1];
  let isForeignKey = (hasOwnForeingKeys&&ownForeignKeysArr.includes(a));
-%>
<% if(type === 'String') {%>
            {/* <%- label %> */}
            <CardContent key='<%- a %>' className={classes.cardContent} >
              <StringField
                itemKey='<%- a %>'
                name='<%- a %>'
                label='<%- label %>'
                text={item.<%- a %>}
                valueOk={valueOkStates.<%- a _%>}
<% if(i===0) {-%>
                autoFocus={true}
<%}-%>
                handleSetValue={handleSetValue}
              />
            </CardContent>
<%}-%>
<% if(type === 'Float') {%>
            {/* <%- label %> */}
            <CardContent key='<%- a %>' className={classes.cardContent} >
              <FloatField
                itemKey='<%- a %>'
                name='<%- a %>'
                label='<%- label %>'
                text={item.<%- a %>}
                valueOk={valueOkStates.<%- a _%>}
<% if(i===0) {-%>
                autoFocus={true}
<%}-%>
                handleSetValue={handleSetValue}
              />
            </CardContent>
<%}-%>
<% if(type === 'Int') {%>
            {/* <%- label %> */}
            <CardContent key='<%- a %>' className={classes.cardContent} >
              <IntField
                itemKey='<%- a %>'
                name='<%- a %>'
                label='<%- label %>'
<%if(isForeignKey){-%>
                foreignKey
                text={foreignKeys.<%- a %>}
<%} else {-%>
                text={item.<%- a %>}
<%}-%>
                valueOk={valueOkStates.<%- a _%>}
<% if(i===0) {-%>
                autoFocus={true}
<%}-%>
                handleSetValue={handleSetValue}
              />
            </CardContent>
<%}-%>
<% if(type === 'Boolean') {%>
            {/* <%- label %> */}
            <CardContent key='<%- a %>' className={classes.cardContent} >
              <BoolField
                itemKey='<%- a %>'
                name='<%- a %>'
                label='<%- label %>'
                text={item.<%- a %>}
                valueOk={valueOkStates.<%- a _%>}
<% if(i===0) {-%>
                autoFocus={true}
<%}-%>
                handleSetValue={handleSetValue}
              />
            </CardContent>
<%}-%>
<% if(type === 'Date') {%>
            {/* <%- label %> */}
            <CardContent key='<%- a %>' className={classes.cardContent} >
              <DateField
                itemKey='<%- a %>'
                name='<%- a %>'
                label='<%- label %>'
                text={item.<%- a %>}
                valueOk={valueOkStates.<%- a _%>}
<% if(i===0) {-%>
                autoFocus={true}
<%}-%>
                handleSetValue={handleSetValue}
              />
            </CardContent>
<%}-%>
<% if(type === 'Time') {%>
            {/* <%- label %> */}
            <CardContent key='<%- a %>' className={classes.cardContent} >
              <TimeField
                itemKey='<%- a %>'
                name='<%- a %>'
                label='<%- label %>'
                text={item.<%- a %>}
                valueOk={valueOkStates.<%- a _%>}
<% if(i===0) {-%>
                autoFocus={true}
<%}-%>
                handleSetValue={handleSetValue}
              />
            </CardContent>
<%}-%>
<% if(type === 'DateTime') {%>
            {/* <%- label %> */}
            <CardContent key='<%- a %>' className={classes.cardContent} >
              <DateTimeField
                itemKey='<%- a %>'
                name='<%- a %>'
                label='<%- label %>'
                text={item.<%- a %>}
                valueOk={valueOkStates.<%- a _%>}
<% if(i===0) {-%>
                autoFocus={true}
<%}-%>
                handleSetValue={handleSetValue}
              />
            </CardContent>
<%}-%>
<%}-%>

          </Card>
        </Grid>
      </Grid>
    </div>
  );
}
<%- nameOnPascal _%>AttributesFormView.propTypes = {
  item: PropTypes.object.isRequired,
  valueOkStates: PropTypes.object.isRequired,
<%if(hasOwnForeingKeys){-%>
  foreignKeys: PropTypes.object.isRequired,
<%}-%>
  handleSetValue: PropTypes.func.isRequired,
};

