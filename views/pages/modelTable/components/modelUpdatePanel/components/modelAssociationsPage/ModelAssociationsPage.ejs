import React from 'react';
import PropTypes from 'prop-types';
<%for( i=0; i<sortedAssociations.length; i++ ){-%>
import <%- sortedAssociations[i].targetModelCp _%>TransferLists from './<%- sortedAssociations[i].targetModelLc _%>TransferLists/<%- sortedAssociations[i].targetModelCp _%>TransferLists'
<%}-%>
import <%- nameCp _%>AssociationsMenuTabs from './<%- nameCp _%>AssociationsMenuTabs'
import { makeStyles } from '@material-ui/core/styles';
import Grid from '@material-ui/core/Grid';
import Fade from '@material-ui/core/Fade';

const useStyles = makeStyles(theme => ({
  root: {
    margin: theme.spacing(0),
  },
  menu: {
    marginTop: theme.spacing(1),
  }
}));

export default function <%- nameCp _%>AssociationsPage(props) {
  const classes = useStyles();
  const {
    hidden,
    item,
<%for( i=0; i<sortedAssociations.length; i++ ){-%>
    <%- sortedAssociations[i].targetModelPlLc _%>IdsToAdd,
    <%- sortedAssociations[i].targetModelPlLc _%>IdsToRemove,
<%}-%>
    handleTransferToAdd,
    handleUntransferFromAdd,
    handleTransferToRemove,
    handleUntransferFromRemove,
  } = props;
  const [associationSelected, setAssociationSelected] = React.useState('<%- (sortedAssociations.length > 0) ? sortedAssociations[0].targetModelLc : 'no-associations' _%>');

  const handleAssociationClick = (event, newValue) => {
    setAssociationSelected(newValue);
  }

  return (
    <div hidden={hidden}>
      <Fade in={!hidden} timeout={500}>
        <Grid
          className={classes.root} 
          container 
          justify='center'
          alignItems='flex-start'
          spacing={0}
        > 

          {/* Menu Tabs: Associations */}
          <Grid item xs={12} sm={10} md={9} lg={8} xl={7} className={classes.menu}>
            <<%- nameCp _%>AssociationMenuTabs
              associationSelected={associationSelected}
              handleClick={handleAssociationClick}
            />
          </Grid>

<%for( i=0; i<sortedAssociations.length; i++ ){-%>
          {/* <%- sortedAssociations[i].targetModelCp _%> Transfer List */}
          {(associationSelected === '<%- sortedAssociations[i].targetModelLc _%>') && (
            <Grid item xs={12} sm={10} md={9} lg={8} xl={7}>
              <<%- sortedAssociations[i].targetModelCp _%>TransferLists
                item={item}
                idsToAdd={<%- sortedAssociations[i].targetModelPlLc _%>IdsToAdd}
                idsToRemove={<%- sortedAssociations[i].targetModelPlLc _%>IdsToRemove}
                handleTransferToAdd={handleTransferToAdd}
                handleUntransferFromAdd={handleUntransferFromAdd}
                handleTransferToRemove={handleTransferToRemove}
                handleUntransferFromRemove={handleUntransferFromRemove}
              />
            </Grid>
          )}
<%}-%>

        </Grid>
      </Fade>
    </div>
  );
}
<%- nameCp _%>AssociationsPage.propTypes = {
  hidden: PropTypes.bool.isRequired,
  item: PropTypes.object.isRequired,
<%for( i=0; i<sortedAssociations.length; i++ ){-%>
  <%- sortedAssociations[i].targetModelPlLc _%>IdsToAdd: PropTypes.array.isRequired,
  <%- sortedAssociations[i].targetModelPlLc _%>IdsToRemove: PropTypes.array.isRequired,
<%}-%>
  handleTransferToAdd: PropTypes.func.isRequired,
  handleUntransferFromAdd: PropTypes.func.isRequired,
  handleTransferToRemove: PropTypes.func.isRequired,
  handleUntransferFromRemove: PropTypes.func.isRequired,
};