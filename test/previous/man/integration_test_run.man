
integration_test (1)

NAME
    integration_test.sh

USAGE
    npm run test-integration [-- OPTIONS]

DESCRIPTION
    Command line utility to perform single-page-app integration-test.

    Intergation-test case creates a docker-compose ambient with three servers: 
     
    spa_postgres
    spa_science_db_graphql_server 
    spa_science_db_app_server

    By default, after the test run, all corresponding Docker images will be completely removed from the docker; this cleanup step can be skiped with -k option as described below.

    Default behavior performs the following actions:

        1) Stop and removes Docker containers with docker-compose down command, also removes Docker images (--rmi) and named or anonymous volumes (-v). 
        2) Removes any previously generated code located on current project's local directory: ./docker/integration_test_run.
        3) Re-generates the code from the test models located on current project's local directory: ./test/integration-test-input. The code is generated on local directory: ./docker/integration_test_run.
        4) Creates and start containers with docker-compose up command.
        5) Excecutes integration tests. The code should exists, otherwise the integration tests are not executed. 
        6) Do cleanup as described on 1) and 2) steps (use -k option to skip this step).
    
    The options are as follows:

    -h, -help
        Display this help and exit.

    -r, --restart-containers

        This option performs the following actions:

        1) Stop and removes containers with docker-compose down command (without removing images).
        2) Creates and start containers with docker-compose up command.
        
        Because the containers that manages the test-suite's databases do not use docker named volumes, but transient ones, the databases will be re-initialized by this command, too.

    -g, --generate-code
        
        This option performs the following actions:
        
        1) Stop and removes containers with docker-compose down command (without removing images).
        2) Removes any previously generated code located on current project's local directory: ./docker/integration_test_run.
        3) Re-generates the code from the test models located on current project's local directory: ./test/integration-test-input. The code is generated on local directory: ./docker/integration_test_run.
        4) Creates and start containers with docker-compose up command.

    -t, --run-test-only

        This option performs the following actions:
        
        1) Stops and removes containers with docker-compose down command (without removing images).
        2) Creates and starts containers with docker-compose up command.
        3) Excecutes integration tests. The code should exists, otherwise the integration tests are not executed.

        If option -k is also specified, then cleanup step is skipped at the end of the integration-test-suite, otherwise, the cleanup step is performed at the end of the tests (see -c option).

    -T, --generate-code-and-run-tests

        This option performs the following actions:
        
        1) Stops and removes containers with docker-compose down command (without removing images).
        2) Removes any previously generated code located on current project's local directory: ./docker/integration_test_run.
        3) Re-generates the code from the test models located on current project's local directory: ./test/integration-test-input. The code is generated on local directory: ./docker/integration_test_run.
        4) Creates and starts containers with docker-compose up command.
        5) Excecutes integration tests. The code should exists, otherwise the integration tests are not executed. 

        If option -k is also specified, then cleanup step is skipped at the end of the integration-test-suite, otherwise, the cleanup step is performed at the end of the tests (see -c option).

    -k, --keep-running

        This option skips the cleanup step at the end of the integration-test-suite and keeps the Docker containers running.
        
        This option can be used alone, or in conjunction with the options -t or -T.

        If this option is not specified, then, by default, the cleanup step is performed at the end of the tests (see -c option).

    -c, --cleanup

        This option performs the following actions:
        
        1) Stops and removes Docker containers with docker-compose down command, also removes Docker images (--rmi) and named or anonymous volumes (-v).
        2) Removes any previously generated code located on current project's local directory: ./docker/integration_test_run.

EXAMPLES
    To see full test-integration info:
    $ npm run test-integration -- -h

    To run default behavior (cleanup-genCode-doTests-cleanup):
    $ npm run test-integration

    To run default behavior but skip final cleanup (cleanup-genCode-doTests):
    $ npm run test-integration -- -k

    To restart containers:
    $ npm run test-integration -- -r

    To generate code and start containers:
    $ npm run test-integration -- -g

    To do the tests only and keep the containers running at end:
    $ npm run test-integration -- -t -k

    To generate code and do the tests, removing all Docker images at end:
    $ npm run test-integration -- -T

    To do a full clean up (removes containers, images and code):
    $ npm run test-integration -- -c

sh_integration_test_run (1)