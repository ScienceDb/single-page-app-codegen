version: "3.2"

#
# This docker-compose setup raises the following services:
#
# gql_postgres1                   (db)
# gql_science_db_graphql_server1  (gql server)
# gql_ncbi_sim_srv1               (external web database simulator) //inactive
# spa_science_db_app_server1      (spa)
#
# gql_postgres2                   (db)
# gql_science_db_graphql_server2  (gql server)
# spa_science_db_app_server2      (spa)
#

services:
#
# Postgres 1
#
  gql_postgres1:
    container_name: postgres1
    build:
      context: .
      dockerfile: Dockerfile.postgres
    ports:
     - 1234:5432
    volumes:
     - sdb_db_data1:/var/lib/postgresql/data
     - ../test/integration-test.sql:/usr/src/app/integration-test.sql
    networks:
     - instance1
#
# GraphQL Server 1
#
  gql_science_db_graphql_server1:
    container_name: server1
    depends_on:
      - gql_postgres1
    build:
      context: .
      dockerfile: Dockerfile.graphql_server

    volumes:
      - ./integration_test_run/gql-instance1/schemas:/usr/src/app/generated/schemas
      - ./integration_test_run/gql-instance1/resolvers:/usr/src/app/generated/resolvers
      - ./integration_test_run/gql-instance1/models/sql:/usr/src/app/generated/models/sql
      - ./integration_test_run/gql-instance1/models/adapters:/usr/src/app/generated/models/adapters
      - ./integration_test_run/gql-instance1/models/distributed:/usr/src/app/models/distributed
      - ./integration_test_run/gql-instance1/models/zendro-server:/usr/src/app/models/zendro-server
      - ./integration_test_run/gql-instance1/models/generic:/usr/src/app/models/generic
      - ./integration_test_run/gql-instance1/migrations:/usr/src/app/generated/migrations
      - ./integration_test_run/gql-instance1/validations:/usr/src/app/generated/validations
      - ./integration_test_run/gql-instance1/patches:/usr/src/app/generated/patches
      - ./integration_test_run/gql-instance1/acl_rules.js:/usr/src/app/acl_rules.js
      - ./sequelize_config_instance1.json:/usr/src/app/config/data_models_storage_config.json
      - ./copy_generated_code.sh:/usr/src/app/copy_generated_code.sh
      - ./migrateDbAndStartServer.sh:/usr/src/app/migrateDbAndStartServer.sh

    ports:
      - "3000:3000"

    environment:
      PORT: 3000
      REQUIRE_SIGN_IN: "false"
      LIMIT_RECORDS: 100000
    # Await POSTGRES role and DB creation, migrate schema, then start web server:
    networks:
      - integrationtest
      - instance1

    command:
      - /bin/sh
      - -c
      - |
        npm install
        chmod u+x ./copy_generated_code.sh
        ./copy_generated_code.sh
        chmod u+x ./migrateDbAndStartServer.sh
        ./migrateDbAndStartServer.sh
#
# NCBI Simulated Server 1
#
  # gql_ncbi_sim_srv1:
  #   container_name: gql_ncbi_sim_srv
  #   depends_on:
  #     - gql_postgres1
  #     - gql_science_db_graphql_server1
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.ncbi_sim_srv

  #   volumes:
  #     - ./ncbi_sim_srv:/usr/src/app

  #   ports:
  #     - "3344:3344"
  #   environment:
  #       PORT: 3344
  #       BASE_URL: /aminoAcidSequence

  #   networks:
  #     - instance1

  #   command:
  #     - /bin/sh
  #     - -c
  #     - |
  #       npm install
  #       npm start
#
# SPA 1
#
  spa_science_db_app_server1:
    stdin_open: true # needed for react-scripts@3.4.1 https://github.com/facebook/create-react-app/issues/8688
    container_name: spa1
    depends_on:
      - gql_science_db_graphql_server1
    build:
      context: .
      dockerfile: Dockerfile.app
    volumes:
      - ./integration_test_run/spa-instance1/src/components/main-panel/table-panel:/usr/src/app/src/components/main-panel/table-panel
      - ./integration_test_run/spa-instance1/src/components/plots:/usr/src/app/src/components/plots
      - ./integration_test_run/spa-instance1/src/requests:/usr/src/app/src/requests
      - ./integration_test_run/spa-instance1/src/routes:/usr/src/app/src/routes
      - ./integration_test_run/spa-instance1/src/acl_rules.js:/usr/src/app/src/acl_rules.js
    ports:
     - 8080:8080
    environment:
     - PORT=8080
     - REACT_APP_ZENDRO_GRAPHQL_SERVER_URL=http://localhost:3000/graphql
     - REACT_APP_ZENDRO_LOGIN_URL=http://localhost:3000/login
     - REACT_APP_ZENDRO_EXPORT_URL=http://localhost:3000/export
     - REACT_APP_ZENDRO_MAX_UPLOAD_SIZE=500
    networks:
    - integrationtest
    command:
      - /bin/sh
      - -c
      - |
        npm install
        npm start

#
# Postgres 2
#
  gql_postgres2:
    container_name: postgres2
    build:
      context: .
      dockerfile: Dockerfile.postgres
    ports:
     - 1235:5431
    volumes:
     - sdb_db_data2:/var/lib/postgresql/data
     - ../test/integration-test.sql:/usr/src/app/integration-test.sql
    networks:
      - instance2
#
# GraphQL Server 2
#
  gql_science_db_graphql_server2:
    container_name: server2
    depends_on:
      - gql_postgres2
    build:
      context: .
      dockerfile: Dockerfile.graphql_server

    volumes:
      - ./integration_test_run/gql-instance2/schemas:/usr/src/app/generated/schemas
      - ./integration_test_run/gql-instance2/resolvers:/usr/src/app/generated/resolvers
      - ./integration_test_run/gql-instance2/models/sql:/usr/src/app/generated/models/sql
      - ./integration_test_run/gql-instance2/models/adapters:/usr/src/app/generated/models/adapters
      - ./integration_test_run/gql-instance2/models/distributed:/usr/src/app/models/distributed
      - ./integration_test_run/gql-instance2/models/zendro-server:/usr/src/app/models/zendro-server
      - ./integration_test_run/gql-instance2/models/generic:/usr/src/app/models/generic
      - ./integration_test_run/gql-instance2/migrations:/usr/src/app/generated/migrations
      - ./integration_test_run/gql-instance2/validations:/usr/src/app/generated/validations
      - ./integration_test_run/gql-instance2/patches:/usr/src/app/generated/patches
      - ./integration_test_run/gql-instance2/acl_rules.js:/usr/src/app/acl_rules.js
      - ./sequelize_config_instance2.json:/usr/src/app/config/data_models_storage_config.json
      - ./copy_generated_code.sh:/usr/src/app/copy_generated_code.sh
      - ./migrateDbAndStartServer.sh:/usr/src/app/migrateDbAndStartServer.sh

    ports:
      - "3030:3030"

    environment:
      PORT: 3030
      REQUIRE_SIGN_IN: "false"
      LIMIT_RECORDS: 100000
    # Await POSTGRES role and DB creation, migrate schema, then start web server:
    networks:
      - integrationtest
      - instance2
    command:
      - /bin/sh
      - -c
      - |
        npm install
        chmod u+x ./copy_generated_code.sh
        ./copy_generated_code.sh
        chmod u+x ./migrateDbAndStartServer.sh
        ./migrateDbAndStartServer.sh

#
# SPA 2
#
  spa_science_db_app_server2:
    stdin_open: true # needed for react-scripts@3.4.1 https://github.com/facebook/create-react-app/issues/8688
    container_name: spa2
    depends_on:
      - gql_science_db_graphql_server2
    build:
      context: .
      dockerfile: Dockerfile.app
    volumes:
      - ./integration_test_run/spa-instance2/src/components/main-panel/table-panel:/usr/src/app/src/components/main-panel/table-panel
      - ./integration_test_run/spa-instance2/src/components/plots:/usr/src/app/src/components/plots
      - ./integration_test_run/spa-instance2/src/requests:/usr/src/app/src/requests
      - ./integration_test_run/spa-instance2/src/routes:/usr/src/app/src/routes
      - ./integration_test_run/spa-instance2/src/acl_rules.js:/usr/src/app/src/acl_rules.js
    ports:
     - 8081:8081
    environment:
     - PORT=8081
     - REACT_APP_ZENDRO_GRAPHQL_SERVER_URL=http://localhost:3030/graphql
     - REACT_APP_ZENDRO_LOGIN_URL=http://localhost:3030/login
     - REACT_APP_ZENDRO_EXPORT_URL=http://localhost:3030/export
     - REACT_APP_ZENDRO_MAX_UPLOAD_SIZE=500
    networks:
    - integrationtest
    command:
      - /bin/sh
      - -c
      - |
        npm install
        npm start

volumes:
  sdb_db_data1:
  sdb_db_data2:

networks:
  instance1:
  instance2:
  integrationtest: